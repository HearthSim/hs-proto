syntax = "proto3";
package pegasus.pegasusfsg;

// Proto extractor compiled unit - https://github.com/HearthSim/proto-extractor

import "pegasus/pegasusshared/pegasusshared.proto";

// ref: PegasusFSG.BrawlDeckValidity
message BrawlDeckValidity {
	int32 season_id = 1;
	bool valid_deck = 2;
	int32 brawl_library_item_id = 3;
}

// ref: PegasusFSG.CheckInToFSG
message CheckInToFSG {
	// ref: PegasusFSG.CheckInToFSG/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		system = 3;
		ID = 502;
	}

	int64 fsg_id = 1;
	pegasus.pegasusshared.GPSCoords location = 2;
	repeated string bssids = 3 [packed=false];
	pegasus.pegasusshared.Platform platform = 4;
}

// ref: PegasusFSG.CheckInToFSGResponse
message CheckInToFSGResponse {
	// ref: PegasusFSG.CheckInToFSGResponse/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		ID = 505;
	}

	pegasus.pegasusshared.ErrorCode error_code = 1;
	int64 fsg_id = 2;
	repeated pegasus.pegasusshared.FSGPatron fsg_attendees = 3 [packed=false];
	pegasus.pegasusshared.TavernBrawlPlayerRecord player_record = 4;
	bytes fsg_shared_secret_key = 5;
	repeated int32 innkeeper_selected_brawl_library_item_id = 6 [packed=false];
}

// ref: PegasusFSG.CheckOutOfFSG
message CheckOutOfFSG {
	// ref: PegasusFSG.CheckOutOfFSG/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		system = 3;
		ID = 503;
	}

	int64 fsg_id = 1;
	pegasus.pegasusshared.Platform platform = 2;
}

// ref: PegasusFSG.CheckOutOfFSGResponse
message CheckOutOfFSGResponse {
	// ref: PegasusFSG.CheckOutOfFSGResponse/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		ID = 506;
	}

	pegasus.pegasusshared.ErrorCode error_code = 1;
	int64 fsg_id = 2;
}

// ref: PegasusFSG.DeckValidity
message DeckValidity {
	// ref: PegasusFSG.DeckValidity/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		ID = 513;
	}

	bool valid_standard_deck = 1;
	bool valid_wild_deck = 2;
	repeated BrawlDeckValidity valid_tavern_brawl_deck = 3 [packed=false];
	repeated BrawlDeckValidity valid_fireside_brawl_deck = 4 [packed=false];
}

// ref: PegasusFSG.FSGFeatureConfig
message FSGFeatureConfig {
	// ref: PegasusFSG.FSGFeatureConfig/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		ID = 511;
	}

	bool gps = 1;
	bool wifi = 2;
	bool auto_checkin = 3;
	int64 max_accuracy = 4;
}

// ref: PegasusFSG.FSGPatronListUpdate
message FSGPatronListUpdate {
	// ref: PegasusFSG.FSGPatronListUpdate/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		system = 3;
		ID = 512;
	}

	repeated pegasus.pegasusshared.FSGPatron added_patrons = 1 [packed=false];
	repeated pegasus.pegasusshared.FSGPatron removed_patrons = 2 [packed=false];
}

// ref: PegasusFSG.InnkeeperSetupGathering
message InnkeeperSetupGathering {
	// ref: PegasusFSG.InnkeeperSetupGathering/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		system = 3;
		ID = 507;
	}

	pegasus.pegasusshared.GPSCoords location = 1;
	repeated string bssids = 2 [packed=false];
	int64 fsg_id = 3;
	pegasus.pegasusshared.Platform platform = 4;
}

// ref: PegasusFSG.InnkeeperSetupGatheringResponse
message InnkeeperSetupGatheringResponse {
	// ref: PegasusFSG.InnkeeperSetupGatheringResponse/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		ID = 508;
	}

	pegasus.pegasusshared.ErrorCode error_code = 1;
	int64 fsg_id = 2;
}

// ref: PegasusFSG.PatronCheckedInToFSG
message PatronCheckedInToFSG {
	// ref: PegasusFSG.PatronCheckedInToFSG/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		system = 3;
		ID = 509;
	}

	pegasus.pegasusshared.FSGPatron patron = 1;
}

// ref: PegasusFSG.PatronCheckedOutOfFSG
message PatronCheckedOutOfFSG {
	// ref: PegasusFSG.PatronCheckedOutOfFSG/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		system = 3;
		ID = 510;
	}

	pegasus.pegasusshared.FSGPatron patron = 1;
}

// ref: PegasusFSG.RequestNearbyFSGs
message RequestNearbyFSGs {
	// ref: PegasusFSG.RequestNearbyFSGs/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		system = 3;
		ID = 501;
	}

	pegasus.pegasusshared.GPSCoords location = 1;
	repeated string bssids = 2 [packed=false];
	pegasus.pegasusshared.Platform platform = 3;
}

// ref: PegasusFSG.RequestNearbyFSGsResponse
message RequestNearbyFSGsResponse {
	// ref: PegasusFSG.RequestNearbyFSGsResponse/PacketID
	enum PacketID {
		PACKETID_AUTO_INVALID = 0;
		ID = 504;
	}

	pegasus.pegasusshared.ErrorCode error_code = 1;
	repeated pegasus.pegasusshared.FSGConfig fsgs = 2 [packed=false];
	int64 checked_in_fsg_id = 3;
	repeated pegasus.pegasusshared.FSGPatron fsg_attendees = 4 [packed=false];
	bytes fsg_shared_secret_key = 5;
	repeated int32 innkeeper_selected_brawl_library_item_id = 6 [packed=false];
}

