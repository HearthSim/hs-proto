syntax = "proto3";
package bnet.protocol;

// Proto extractor compiled unit - https://github.com/HearthSim/proto-extractor


// ref: bnet.protocol.AccountInfo
message AccountInfo {
	bool account_paid = 1;
	fixed32 country_id = 2;
	string battle_tag = 3;
	bool manual_review = 4;
}

// ref: bnet.protocol.Address
message Address {
	string address = 1;
	uint32 port = 2;
}

// ref: bnet.protocol.attribute.Attribute
message Attribute {
	string name = 1;
	Variant value = 2;
}

// ref: bnet.protocol.ContentHandle
message ContentHandle {
	fixed32 region = 1;
	fixed32 usage = 2;
	bytes hash = 3;
	string proto_url = 4;
}

// ref: bnet.protocol.EntityId
message EntityId {
	fixed64 high = 1;
	fixed64 low = 2;
}

// ref: bnet.protocol.ErrorInfo
message ErrorInfo {
	ObjectAddress object_address = 1;
	uint32 status = 2;
	uint32 service_hash = 3;
	uint32 method_id = 4;
}

// ref: bnet.protocol.Header
message Header {
	uint32 service_id = 1;
	uint32 method_id = 2;
	uint32 token = 3;
	uint64 object_id = 4;
	uint32 size = 5;
	uint32 status = 6;
	repeated ErrorInfo error = 7 [packed=false];
	uint64 timeout = 8;
}

// ref: bnet.protocol.Identity
message Identity {
	EntityId account_id = 1;
	EntityId game_account_id = 2;
}

// ref: bnet.protocol.NoData
message NoData {
}

// ref: bnet.protocol.NORESPONSE
message NORESPONSE {
}

// ref: bnet.protocol.ObjectAddress
message ObjectAddress {
	ProcessId host = 1;
	uint64 object_id = 2;
}

// ref: bnet.protocol.Path
message Path {
	repeated uint32 ordinal = 1;
}

// ref: bnet.protocol.Privilege
message Privilege {
	string name = 1;
	uint32 value = 2;
}

// ref: bnet.protocol.ProcessId
message ProcessId {
	uint32 label = 1;
	uint32 epoch = 2;
}

// ref: bnet.protocol.Role
message Role {
	uint32 id = 1;
	string name = 2;
	repeated string privilege = 3 [packed=false];
	repeated uint32 assignable_role = 4;
	bool required = 5;
	bool unique = 6;
	uint32 relegation_role = 7;
	repeated Attribute attribute = 8 [packed=false];
}

// ref: bnet.protocol.RoleSet
message RoleSet {
	string program = 1;
	string service = 2;
	string subtype = 3;
	repeated Role role = 4 [packed=false];
	repeated uint32 default_role = 5;
	int32 max_members = 6;
	repeated Attribute attribute = 7 [packed=false];
}

// ref: bnet.protocol.RoleSetConfig
message RoleSetConfig {
	repeated Privilege privilege = 1 [packed=false];
	RoleSet role_set = 2;
}

// ref: bnet.protocol.attribute.Variant
message Variant {
	bool bool_value = 2;
	int64 int_value = 3;
	double float_value = 4;
	string string_value = 5;
	bytes blob_value = 6;
	bytes message_value = 7;
	string fourcc_value = 8;
	uint64 uint_value = 9;
	EntityId entityid_value = 10;
}

